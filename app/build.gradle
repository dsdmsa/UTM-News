import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def final DEV = "dsdmsa.utmnews.dev"
def final PROD = "dsdmsa.utmnews.prod"
def final VERSION_NAME = "v0.3.${getGitCommitsNumber()}.${buildTime()}"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "dsdmsa.utmnews"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
//        jackOptions {
//            enabled true
//        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            applicationId DEV
            signingConfig signingConfigs.debug
            versionName "dev.$VERSION_NAME"
        }

        prod {
            applicationId PROD
            versionName "prod.$VERSION_NAME"
            signingConfig signingConfigs.debug
        }

    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'tools.fastlane:screengrab:1.1.0'
    androidTestCompile 'com.android.support:support-annotations:25.3.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:preference-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    compile 'com.google.dagger:dagger:2.9'
    compile 'com.jakewharton:butterknife:8.5.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'com.arello-mobile:moxy-app-compat:1.4.6'
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'me.zhanghai.android.customtabshelper:library:1.0.3'
    compile 'com.github.GrenderG:Toasty:1.1.4'
    compile 'com.github.Commit451:Teleprinter:1.0.1'
    compile 'android.arch.lifecycle:extensions:1.0.0-alpha1'
    compile 'android.arch.persistence.room:runtime:1.0.0-alpha1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    compile 'com.google.firebase:firebase-crash:10.0.1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    annotationProcessor 'com.arello-mobile:moxy-compiler:1.4.6'
    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0-alpha1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0-alpha1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    provided 'javax.annotation:jsr250-api:1.0'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

}

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMdd")
    df.setTimeZone(TimeZone.getTimeZone("GMT"))
    return df.format(new Date())
}

def getGitCommitsNumber() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--all', '--count'
        standardOutput = stdout
    }
    return stdout.toString().replace('\n', '')
}

apply plugin: 'com.google.gms.google-services'