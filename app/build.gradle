import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'android-apt'
apply plugin: 'com.neenbedankt.android-apt'

def final DEV = "dsdmsa.utm_news.dev"
def final PROD = "dsdmsa.utm_news.prod"
def final VERSION_NAME = "v0.0.1.${buildTime()}"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "dsdmsa.utm_news"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    productFlavors {
//        dev {
//            applicationId DEV
//            signingConfig signingConfigs.debug
//            versionName "dev.$VERSION_NAME"
//        }
//
//        prod {
//            applicationId PROD
//            versionName "prod.$VERSION_NAME"
//            signingConfig signingConfigs.debug
//        }
//
//    }


}

ext.supportLibVersion = "25.3.1"
ext.retrofitVersion = '2.1.0'
ext.okHttpVersion = '3.5.0'
ext.daggerVersion = '2.8'
ext.parcelerVersion = '1.1.6'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:support-fragment:$supportLibVersion"
    compile "com.android.support:support-core-ui:$supportLibVersion"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:preference-v7:$supportLibVersion"

    compile 'com.google.code.gson:gson:2.8.0'

    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    //di
    apt "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    //image processer
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //html parser
    compile 'org.jsoup:jsoup:1.10.2'
    //chrome tab
    compile 'me.zhanghai.android.customtabshelper:library:1.0.3'
    // MVP framework
    compile 'com.arello-mobile:moxy-app-compat:1.4.6'
    compile 'com.arello-mobile:moxy-android:1.4.6'
    annotationProcessor 'com.arello-mobile:moxy-compiler:1.4.6'

    // memory leack
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //logger
    compile 'com.jakewharton.timber:timber:4.5.1'



    //testing
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMdd")
    df.setTimeZone(TimeZone.getTimeZone("GMT"))
    return df.format(new Date())
}